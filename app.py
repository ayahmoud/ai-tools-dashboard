# -*- coding: utf-8 -*-
"""app.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1NbXgkMrZjrUiDMxKEOMK6LmAtuXZoHOJ
"""

import streamlit as st
import pandas as pd
import plotly.express as px

st.set_page_config(page_title="AI Tools Dashboard", layout="wide")

st.title("AI Tools Evaluation Dashboard")
st.markdown("Interactive Analysis for 5 Key Departments")

# Sample data
tools_data = {
    "Tool_Name": ["DeepL Pro", "GitHub Copilot", "Salesforce Einstein", "Restb.ai", "Workday AI",
                  "Google Translate", "Tabnine", "HubSpot AI", "Zillow AI", "BambooHR"],
    "Department": ["Translation", "Product Development", "Sales", "Real Estate", "HR",
                   "Translation", "Product Development", "Sales", "Real Estate", "HR"],
    "Overall_Score": [9.2, 9.5, 9.1, 8.4, 8.7, 8.5, 8.8, 8.6, 8.9, 8.1],
    "Monthly_Cost": [30, 10, 150, 99, 85, 20, 12, 45, 0, 60],
    "Use_Case": ["Document Translation", "Code Generation", "CRM Enhancement", "Property Analysis", "Workforce Analytics",
                 "API Integration", "Code Completion", "Marketing Automation", "Price Prediction", "Employee Experience"]
}

df = pd.DataFrame(tools_data)

# Sidebar filters
st.sidebar.header("Filters")
selected_dept = st.sidebar.multiselect("Select Departments", df["Department"].unique(), default=df["Department"].unique())
min_score = st.sidebar.slider("Minimum Score", 6.0, 10.0, 7.0, 0.1)

# Filter data
filtered_df = df[(df["Department"].isin(selected_dept)) & (df["Overall_Score"] >= min_score)]

# Metrics
col1, col2, col3 = st.columns(3)
col1.metric("Total Tools", len(filtered_df))
col2.metric("Average Score", f"{filtered_df['Overall_Score'].mean():.1f}")
col3.metric("Average Cost", f"${filtered_df['Monthly_Cost'].mean():.0f}")

# Charts
col1, col2 = st.columns(2)

with col1:
    fig1 = px.bar(filtered_df, x="Department", y="Overall_Score", color="Department",
                  title="Average Scores by Department")
    st.plotly_chart(fig1, use_container_width=True)

with col2:
    fig2 = px.scatter(filtered_df, x="Monthly_Cost", y="Overall_Score", color="Department",
                      hover_data=["Tool_Name"], title="Cost vs Performance")
    st.plotly_chart(fig2, use_container_width=True)

# Data table
st.subheader("Tool Details")
st.dataframe(filtered_df, use_container_width=True)

# CSV Download Button
csv = filtered_df.to_csv(index=False)
st.download_button(
    label="Download Filtered Data as CSV",
    data=csv,
    file_name='filtered_ai_tools.csv',
    mime='text/csv'
)